<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function ($scope, $element, $window, $location, $rootScope, $timeout, snAttachmentHandler, $http, spUtil, userPreferences, $filter, i18n, $uibModal, spAriaUtil) {

	// Many of these fields are more configuration-type fields than profile fields. We still want to display
	// these to a user who is configuring their 'settings', but we shouldn't show them on a user profile page.
	// We need to handle this better.
	var fieldExcludes = {
		sys_user: ['name', 'introduction', 'title', 'department', 'location', 'photo',
							 'manager', 'company'],
		live_profile: ['short_description', 'photo']
	}

	$scope.openConnectConversation = function() {
		$window.open('/$c.do#?user=' + $scope.data.liveProfileID, '_blank');
	}

	$scope.$watch('data.dateTimeFormat', function() {
		if ($scope.data.dateTimeFormat != g_user_date_time_format)
			$scope.data.dateTimeFormatChanged = true;
	});

	$scope.uploadNewProfilePicture = function($event) {
		$event.stopPropagation();
		var $el = $element.find('input[type=file]');
		$el.click();
	}

	$scope.attachFiles = function(files) {
		if (!files.files.length)
			return;

		var file = files.files[0];

		var validImage = false;

		switch(file.type) {
			case 'image/jpeg':
			case 'image/png':
			case 'image/bmp':
			case 'image/x-windows-bmp':
			case 'image/gif':
			case 'image/x-icon':
			case 'image/svg+xml':
				validImage = true;
				break;
			default:
				break;
		}

		
		if(!validImage) {
			alert(file.name + " " + i18n.getMessage("isn't a recognized image file format"));
			return;
		}

		snAttachmentHandler.create("live_profile", $scope.data.liveProfileID).uploadAttachment(file, {
			sysparm_fieldname: "photo"
		}).then(function(response) {
			var obj = {};
			obj.newAvatarId = response.sys_id;
			$scope.avatarPicture = {
				'background-image': "url('" + response.sys_id + ".iix')",
				'color': 'transparent'
			};
			$rootScope.$broadcast("sp.avatar_changed", obj);
			// timeout is required for screen reader to pick up the message once file upload prompt is dismissed
			$timeout(function() {
			   spAriaUtil.sendLiveMessage(i18n.getMessage('Profile picture updated successfully'));
			}, 500);
		});
	}

	$scope.avatarPicture = "";

	$http.get('/api/now/live/profiles/sys_user.' + $scope.data.sysUserID).then(function (response) {
		if (response.data.result && response.data.result.avatar){
			var avatarPicture = response.data.result.avatar.replace("?t=small", "");
			$scope.avatarPicture = {
				'background-image': "url('" + avatarPicture + "')",
				'color': 'transparent'
			};
		}
	});

	spUtil.recordWatch($scope, "sys_user", "sys_id=" + $scope.data.sysUserID);
	spUtil.recordWatch($scope, "live_profile", "sys_id=" + $scope.data.liveProfileID);

	$scope.connectEnabled = function() {
		return $scope.data.connectEnabled && !$scope.data.isLoggedInUsersProfile;
	}

	$scope.openUserProfile = function($event, userID) {
		$event.stopPropagation();
		$event.preventDefault();
		$location.search("id=integration_painel_user&sys_id=" + userID);
	}

	$scope.getSysUserModelFields = function() {
		if ($scope.data.userExists) {
			return $scope.data.sysUserModelList
							.filter(function(field) {
								return $scope.displayField("sys_user", field.name);
							});
		}
		return [];
	}
	

	$scope.reloadPage = function() {
			$window.location.reload(true);
	};

	$scope.teamExists = function() {
		return $scope.data.teamData.direct_reports.length > 0 ||
			$scope.data.teamData.members.length > 0 ||
			$scope.data.teamData.manager;
	}

	var models = {
		sys_user: $scope.data.sysUserModel,
		live_profile: $scope.data.liveProfileModel
	}

	$scope.displayField = function(tableName, field, isHeader) {
		if (!isHeader && fieldExcludes[tableName].indexOf(field) > -1) return false;

		if (models[tableName][field] && models[tableName][field].type === "boolean") return false;

		if ($scope.data.isLoggedInUsersProfile) {
			if (models[tableName][field] && models[tableName][field].readonly)
				return models[tableName][field].displayValue;
			else
				return models[tableName][field];
		} else {
			return models[tableName][field] && models[tableName][field].displayValue;
		}
	}

	$timeout(function(){
		$rootScope.$broadcast('finishedChanged', {profile: $scope.data.teamData});
	});

	$scope.sysUserModelFields = $scope.getSysUserModelFields();

}]]></client_script>
        <controller_as>c</controller_as>
        <css>
h2{
    color: rgb(255, 255, 255);
  }
  .btn-default {
    margin-top: 20px;
    color: #ffffff;
    background-color: #b11212;
    border-color:  #b11212;
  }
  .btn-default:hover {
    color: #ffffff;
    background-color: #2d45ff;
    border-color:  #2d45ff;
  }
  .list-group-item {
    border: none;
    padding: 5px 15px;
  
    .btn-link {
        padding-left: 0;
      padding-right: 0;
    }
  }
.panel {
    border-radius: 0;
 background-color:  #020307; 

  }
 .panel-default {
    border-color: #020307;
    border-bottom: 1px solid  #ff2c1f;
}
  .user-details {
    word-wrap: break-word; // ie support
    overflow-wrap: break-word;
    right: 30px;
  }
  .user-details p strong{
color:$red;
  }
  .sp-editable-field.editable-underline {
    color: #ffffff;
  }
  .select2-container.select2-allowclear .select2-choice .select2-chosen {
    margin-right: 60px;
  }
  
  .mia i {
    font-size: 6rem;
  }
  
  .mia {
    color: #808080;
  }
  
  .popover {
    z-index: 1049;
  }
  .avatar-container.avatar-extra-large {
    width: 23.8rem;
    height: 23.8rem;
}

  
  .user-profile-container{
    width: 100%;
   max-width: 100%; 
    margin: 0 auto;
    padding: 0 0.8rem;
}

  .input-switch input[type=checkbox]:checked ~ .switch {
      background-color: $brand-primary;
  }
  
  // accessible accessibility toggle
  @media screen and (-ms-high-contrast: active) {
    .input-switch input.ng-not-empty+label.switch[for="accessibility-enabled"] {
      background-color: highlight;
      border: none;
  
      &amp;:before {
        background-color: highlightText;
      }
    }
  
    .input-switch input.ng-empty+label[for="accessibility-enabled"] {
      background-color: window;
      border: 1px solid windowText;
  
      &amp;:before {
        background-color: windowText;
      }
    }
  }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>integration_painel_user</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Integration Painel User</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  if (input && input.action === "update_session_tracking_info") {
  gs.getSession().putProperty("usage_tracking_allowed_for_session", input.user_tracking);
  return;
  
}

// populate the 'data' object
// e.g., data.table = $sp.getValue('table');
data.sysUserID = $sp.getParameter("sys_id");
if (!data.sysUserID)
    data.sysUserID = gs.getUser().getID();
var sysUserGR = new GlideRecord("sys_user");
data.userExists = sysUserGR.get(data.sysUserID) && sysUserGR.canRead();

if (data.userExists) {
  //sysUserGR = GlideScriptRecordUtil.get(sysUserGR).getRealRecord();
  data.table = sysUserGR.getRecordClassName();
  data.name = sysUserGR.getValue("name");
  var loggedInSysUserID = gs.getUser().getID();
  data.connectEnabled = GlidePluginManager().isActive('com.glide.connect');
  data.liveProfileID = "";
  data.dateTimeFormat = gs.getDateTimeFormat();

  //get live profile id for sending connect messages
  if (GlidePluginManager().isActive('com.glideapp.live_common')) {
    var liveProfileGR = new GlideRecord("live_profile");
    liveProfileGR.addQuery("document", data.sysUserID);
    liveProfileGR.query();
    if (liveProfileGR.next()) {
      data.liveProfileID = liveProfileGR.getValue("sys_id");
      data.liveProfileModel = $sp.getForm("live_profile", data.liveProfileID)._fields;
      // live_profile short_description is shown here as "Bio", so popup label/hint must reflect that
      if (data.liveProfileModel.short_description) {
        data.liveProfileModel.short_description.label = gs.getMessage("Bio");
        data.liveProfileModel.short_description.hint = gs.getMessage("Biography");
      }
    } else
      data.connectEnabled = false; //can't find a live profile for this user, so lets not integrate Connect
  }

  data.isLoggedInUsersProfile = loggedInSysUserID.equals(data.sysUserID);
  var sysUserForm = $sp.getForm(data.table, data.sysUserID);
  data.sysUserView = sysUserForm._view;
  data.sysUserModel = sysUserForm._fields;
  data.sysUserModelList = [];

  for (var i = 0; i < data.sysUserView.length; i++) {
    data.sysUserModelList.push(data.sysUserModel[data.sysUserView[i].name]);
  }

  data.directReports = [];
  data.teamData = {};
  data.teamData.direct_reports = [];
  data.teamData.members = [];

  if (!data.isLoggedInUsersProfile) {
    data.teamData.user = {
      sys_id: data.sysUserID
    }
  }

}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-10 01:55:54</sys_created_on>
        <sys_id>5c24ee092f033d105250d39df699b6ae</sys_id>
        <sys_mod_count>258</sys_mod_count>
        <sys_name>Integration Painel User</sys_name>
        <sys_package display_value="Integrations" source="x_820501_integrate">c22f2bd52f26bd105250d39df699b6a8</sys_package>
        <sys_policy/>
        <sys_scope display_value="Integrations">c22f2bd52f26bd105250d39df699b6a8</sys_scope>
        <sys_update_name>sp_widget_5c24ee092f033d105250d39df699b6ae</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-12-11 16:37:42</sys_updated_on>
        <template><![CDATA[<div class="default-focus-outline user-profile-container">
    <div ng-if="!data.userExists" class="panel panel-default">
        <div class="panel-body wrapper-lg text-center">
            <p>${Requested user not found}</p>
        </div>
    </div>
    <div ng-if="data.userExists">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-4 text-center">
                        <div class="row">
                            <div
                                class="avatar-extra-large avatar-container"
                                style="cursor: default"
                                aria-hidden="true">
                                <div class="avatar soloAvatar bottom">
                                    <div class="sub-avatar mia"
                                        ng-style="avatarPicture">
                                        <i class="fa fa-user"></i>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <button
                                ng-if="::connectEnabled()"
                                ng-click="openConnectConversation()"
                                type="button"
                                class="btn btn-primary send-message">
                                <span
                                    class="glyphicon glyphicon-comment pad-right"></span>${Message}
                            </button>
                            <span>
                                <h3>
                                    <a
                                        class="btn btn-default send-message"
                                        ng-href="?id=integration_user_profile&sys_id={{data.sysUserID}}">My
                                        Data</a>
                                </h3>
                            </span>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-8 user-details">
                        <h2>Bem-vindo(a), {{data.name}}</h2>
                        <p ng-if="::displayField('sys_user', 'title', true)">
                            <strong class="pad-right">${Title}</strong><sp-editable-field
                                editable-by-user="data.isLoggedInUsersProfile"
                                table="sys_user"
                                table-id="data.sysUserID"
                                field-model="data.sysUserModel.title"></sp-editable-field>
                        </p>
                        <p
                            ng-if="::displayField('sys_user', 'department', true)">
                            <strong class="pad-right">${Department}</strong><sp-editable-field
                                editable-by-user="data.isLoggedInUsersProfile"
                                table="sys_user"
                                table-id="data.sysUserID"
                                field-model="data.sysUserModel.department"></sp-editable-field>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
]]></template>
    </sp_widget>
</record_update>
